type Token @entity {
  id: ID!
  name: String
  txCount: BigInt
  totalSupply: BigInt
  symbol: String
  factory: LbFactory
  decimals: BigInt
}
type User @entity {
  id: ID!
}
type LbPair @entity {
  id: ID!
  tokenXPrice: BigInt
  volumeX: BigInt
  feesUSD: BigInt
  feesTokenX: BigInt
  untrackedVolumeUSD: BigInt
  tokenYPriceUSD: BigInt
  volumeY: BigInt
  block: BigInt
  feesTokenY: BigInt
  volumeTokenX: BigInt
  tokenXPriceUSD: BigInt
  tokenYPrice: BigInt
  activeId: String
  volumeTokenY: BigInt
  timestamp: String
  binStep: String
  liquidityProviderCount: BigInt
  txCount: BigInt
  totalValueLockedAvax: BigInt
  reserveX: BigInt
  tokenX: Token
  reserveY: BigInt
  tokenY: Token
  tokenYAddress: String
  tokenXAddress: String
  totalValueLockedUSD: BigInt
  ignored: Boolean
}
type LbFactory @entity {
  id: ID!
  pairCount: BigInt
  userCount: BigInt
  volumeUSD: BigInt
  volumeAVAX: BigInt
}
type LbPairParameterSet @entity {
  id: ID!
  reductionFactor: BigInt!
  protocolShare: BigInt!
  binStep: BigInt!
  variableFeeControl: BigInt!
  baseFactor: BigInt!
  maxVolatilityAccumulated: BigInt!
  decayPeriod: BigInt!
  sender: String!
  filterPeriod: BigInt!
}
